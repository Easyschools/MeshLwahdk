plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id "androidx.navigation.safeargs.kotlin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.developnetwork.meshlwahdk"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            try {
                storeFile file("../meshlewahdk.jks")
                storePassword KEYSTORE_PASSWORD
                keyAlias "key0"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.",ex)
            }
        }
    }
    buildTypes {
        release {
            def proguard = false
            minifyEnabled proguard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://accsighthis.com/api/"'

            buildConfigField "String", "Notification_Topic", '"custom-topic"'
            buildConfigField "int", "company_id", '24'
//            buildConfigField "int", "product_id", '16'
            signingConfig signingConfigs.release
        }

        debug {
            def proguard = false
            minifyEnabled proguard

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-debug.pro'

//            buildConfigField "String", "SERVER_URL", '"http://192.168.1.63:5002/api/"'
            buildConfigField "String", "SERVER_URL", '"https://accsighthis.com/api/"'

            buildConfigField "String", "Notification_Topic", '"custom-topic"'
            buildConfigField "int", "company_id", '24'
//            buildConfigField "int", "product_id", '16'
//            signingConfig signingConfigs.release
        }

        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies { configuration ->
    
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.9.0")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    androidX(configuration)
    navigation(configuration)
    lifecycle(configuration)
    playServices(configuration)
    fireBase(configuration)
    retrofit(configuration)
    coroutines(configuration)
    koin(configuration)
    imageLoader(configuration)
    progressBar(configuration)
    toasty(configuration)
    pinInput(configuration)
    dimens(configuration)
    logger(configuration)


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.budiyev.android:code-scanner:2.1.0'

}


private static void androidX(configuration) {
    def version = "1.0.0"

    configuration.implementation "androidx.legacy:legacy-support-v4:$version"
    configuration.implementation "androidx.cardview:cardview:$version"
    configuration.implementation "androidx.recyclerview:recyclerview:1.2.0-beta01"
    configuration.implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    configuration.implementation 'androidx.appcompat:appcompat:1.3.1'
    configuration.implementation "androidx.preference:preference-ktx:1.1.1"
    configuration.implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    configuration.implementation "com.google.android.material:material:1.4.0"
    configuration.implementation 'androidx.core:core-ktx:1.7.0'
}

private static void navigation(configuration) {
    def nav_version = "2.3.5"

    configuration.implementation "androidx.navigation:navigation-fragment:$nav_version"
    configuration.implementation "androidx.navigation:navigation-ui:$nav_version"
    configuration.implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    configuration.implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    configuration.implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
}

private static void lifecycle(configuration) {
    def lifecycle_version = "2.3.1"

    configuration.implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    configuration.implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    configuration.implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    configuration.implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
}
private static void playServices(configuration) {
    configuration.implementation 'com.google.android.gms:play-services-maps:17.0.1'
    configuration.implementation "com.google.android.gms:play-services-auth:19.0.0"
    configuration.implementation 'com.google.android.play:core:1.10.0'
    configuration.implementation "com.google.android.gms:play-services-location:18.0.0"
    configuration.implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'
}
private static void fireBase(configuration) {
    configuration.implementation 'com.google.firebase:firebase-analytics-ktx'
    configuration.implementation 'com.google.firebase:firebase-crashlytics-ktx'
    configuration.implementation 'com.google.firebase:firebase-messaging'
}
private static void retrofit(configuration) {
    def retrofit_version = "2.9.0"

    configuration.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    configuration.implementation "com.squareup.okhttp3:okhttp"
    configuration.debugImplementation "com.squareup.okhttp3:logging-interceptor"

    configuration.debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.6.0'
}

private static void coroutines(configuration) {
    def coroutines_version = "1.4.2"
    configuration.implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    configuration.implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}

private static void koin(configuration) {
    def koin_version = "3.1.2"
    configuration.implementation "io.insert-koin:koin-android:$koin_version"
    configuration.testImplementation "org.koin:koin-test:$koin_version"
}

private static void imageLoader(configuration) {
    configuration.implementation 'com.squareup.picasso:picasso:2.71828'
}

private static void progressBar(configuration) {
    configuration.implementation 'com.github.ybq:Android-SpinKit:1.4.0'
//    configuration.implementation 'com.wang.avi:library:2.1.3'
}

private static void toasty(configuration) {
    configuration.implementation 'com.github.GrenderG:Toasty:1.4.2'
}
private static void pinInput(configuration) {
    configuration.implementation('com.alimuzaffar.lib:pinentryedittext:2.0.6') {
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }
}
private static void dimens(configuration) {
    configuration.implementation 'com.intuit.sdp:sdp-android:1.0.6'
    configuration.implementation 'com.intuit.ssp:ssp-android:1.0.6'
}
private static void logger(configuration) {
    configuration.implementation 'com.jakewharton.timber:timber:4.7.1'
}